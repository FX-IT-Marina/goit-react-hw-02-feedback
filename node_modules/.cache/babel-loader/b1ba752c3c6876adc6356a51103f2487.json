{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/goit-react-hw-02-feedback/src/components/App.jsx\";\nimport React, { Component } from 'react';\nimport { FeedbackOptions } from './Feedback/FeedbackOptions';\nimport { Statistics } from './Statistics/Statistics';\nimport { Section } from './Section/Section';\nimport { Notification } from './Notification/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.handleFeedback = _ref => {\n      let {\n        target: {\n          name\n        }\n      } = _ref;\n      this.setState(prevState => ({\n        [name]: prevState[name] + 1\n      }));\n    };\n\n    this.countTotalFeedback = () => Object.values(this.state).reduce((total, num) => total + num);\n\n    this.countPositiveFeedbackPercentage = () => Math.round(this.state.good / this.countTotalFeedback() * 100);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          onLeaveFeedback: this.handleFeedback,\n          options: Object.keys(this.state)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: this.countTotalFeedback() > 0 ? /*#__PURE__*/_jsxDEV(Statistics, {\n          good: this.state.good,\n          neutral: this.state.neutral,\n          bad: this.state.bad,\n          total: this.countTotalFeedback(),\n          positivePercentage: this.countPositiveFeedbackPercentage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n          message: \"There is no feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/macbook/Desktop/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["React","Component","FeedbackOptions","Statistics","Section","Notification","App","state","good","neutral","bad","handleFeedback","target","name","setState","prevState","countTotalFeedback","Object","values","reduce","total","num","countPositiveFeedbackPercentage","Math","round","render","keys"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,YAAT,QAA6B,6BAA7B;;;AAEA,OAAO,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCM,KADiC,GACzB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADyB;;AAAA,SAMjCC,cANiC,GAMhB,QAA0B;AAAA,UAAzB;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV,OAAyB;AACzC,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1B,SAACF,IAAD,GAAQE,SAAS,CAACF,IAAD,CAAT,GAAkB;AADA,OAAL,CAAvB;AAGD,KAVgC;;AAAA,SAYjCG,kBAZiC,GAYZ,MACnBC,MAAM,CAACC,MAAP,CAAc,KAAKX,KAAnB,EAA0BY,MAA1B,CAAiC,CAACC,KAAD,EAAQC,GAAR,KAAgBD,KAAK,GAAGC,GAAzD,CAb+B;;AAAA,SAejCC,+BAfiC,GAeC,MAChCC,IAAI,CAACC,KAAL,CAAY,KAAKjB,KAAL,CAAWC,IAAX,GAAkB,KAAKQ,kBAAL,EAAnB,GAAgD,GAA3D,CAhB+B;AAAA;;AAkBjCS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAA,+BACE,QAAC,eAAD;AACE,UAAA,eAAe,EAAE,KAAKd,cADxB;AAEE,UAAA,OAAO,EAAEM,MAAM,CAACS,IAAP,CAAY,KAAKnB,KAAjB;AAFX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,YAAf;AAAA,kBACG,KAAKS,kBAAL,KAA4B,CAA5B,gBACC,QAAC,UAAD;AACE,UAAA,IAAI,EAAE,KAAKT,KAAL,CAAWC,IADnB;AAEE,UAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAFtB;AAGE,UAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,GAHlB;AAIE,UAAA,KAAK,EAAE,KAAKM,kBAAL,EAJT;AAKE,UAAA,kBAAkB,EAAE,KAAKM,+BAAL;AALtB;AAAA;AAAA;AAAA;AAAA,gBADD,gBASC,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,oBADF;AAuBD;;AA1CgC","sourcesContent":["import React, { Component } from 'react';\nimport { FeedbackOptions } from './Feedback/FeedbackOptions';\nimport { Statistics } from './Statistics/Statistics';\nimport { Section } from './Section/Section';\nimport { Notification } from './Notification/Notification';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  handleFeedback = ({ target: { name } }) => {\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce((total, num) => total + num);\n\n  countPositiveFeedbackPercentage = () =>\n    Math.round((this.state.good / this.countTotalFeedback()) * 100);\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            onLeaveFeedback={this.handleFeedback}\n            options={Object.keys(this.state)}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"There is no feedback\"></Notification>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}