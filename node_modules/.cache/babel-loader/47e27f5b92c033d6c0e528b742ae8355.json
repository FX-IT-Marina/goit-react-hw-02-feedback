{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/goit-react-hw-02-feedback/src/components/Feedback/FeedbackOptions.jsx\";\nimport PropTypes from 'prop-types';\nimport css from './FeedbackOptions.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FeedbackOptions = _ref => {\n  let {\n    onLeaveFeedback,\n    options\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: css.statisticsButton,\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: css.button,\n          name: option,\n          type: \"button\",\n          onClick: onLeaveFeedback,\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }, this)\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = FeedbackOptions;\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackOptions\");","map":{"version":3,"sources":["/Users/macbook/Desktop/goit-react-hw-02-feedback/src/components/Feedback/FeedbackOptions.jsx"],"names":["PropTypes","css","FeedbackOptions","onLeaveFeedback","options","statisticsButton","map","option","button","propTypes","func","isRequired","arrayOf","string"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,8BAAhB;;;AACA,OAAO,MAAMC,eAAe,GAAG,QAAkC;AAAA,MAAjC;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAAiC;AAC/D,sBACE;AAAA,2BACE;AAAI,MAAA,SAAS,EAAEH,GAAG,CAACI,gBAAnB;AAAA,gBACGD,OAAO,CAACE,GAAR,CAAYC,MAAM,iBACjB;AAAA,+BACE;AACE,UAAA,SAAS,EAAEN,GAAG,CAACO,MADjB;AAEE,UAAA,IAAI,EAAED,MAFR;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,OAAO,EAAEJ,eAJX;AAAA,oBAMGI;AANH;AAAA;AAAA;AAAA;AAAA;AADF,SAASA,MAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD,CAnBM;KAAML,e;AAqBbA,eAAe,CAACO,SAAhB,GAA4B;AAC1BN,EAAAA,eAAe,EAAEH,SAAS,CAACU,IAAV,CAAeC,UADN;AAE1BP,EAAAA,OAAO,EAAEJ,SAAS,CAACY,OAAV,CAAkBZ,SAAS,CAACa,MAA5B,EAAoCF;AAFnB,CAA5B","sourcesContent":["import PropTypes from 'prop-types';\nimport css from './FeedbackOptions.module.css';\nexport const FeedbackOptions = ({ onLeaveFeedback, options }) => {\n  return (\n    <>\n      <ul className={css.statisticsButton}>\n        {options.map(option => (\n          <li key={option}>\n            <button\n              className={css.button}\n              name={option}\n              type=\"button\"\n              onClick={onLeaveFeedback}\n            >\n              {option}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}